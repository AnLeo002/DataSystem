/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import java.sql.*;
import clases.Conexion;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.WindowConstants;

/**
 *
 * @author leosa
 */
public class GestionarUsuarios extends javax.swing.JFrame {

    String user;
    public static String user_update ="";
    
    //permite tener acceso a los metodos para modificar los datos en su interior(añadir filas,columnas, darle nombres)
    DefaultTableModel model = new DefaultTableModel();
    
    public GestionarUsuarios() {
        initComponents();
        
        user = Login.user;
        setTitle("Usuarios registrados - Sesión de "+user);
        setLocationRelativeTo(null);
        setSize(630,330);
        setResizable(false);
        
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        
        ImageIcon fond = new ImageIcon("src/imagenes/wallpaperPrincipal.jpg");
        Icon fondo = new ImageIcon(fond.getImage().getScaledInstance(jLabelBack.getWidth(),jLabelBack.getHeight(), Image.SCALE_DEFAULT));
         jLabelBack.setIcon(fondo);
        repaint();
        
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select id,nombre_usuario,username,tipo_nivel,estatus from usuarios");
            ResultSet rs = pst.executeQuery();
            
            //para manipular una tabla primero debemos instancear un nuevo objeto Jtabla y pasando como parametro model el cual nos permitira usar metodos para modificar nuestra tabla
            tablaUsuarios = new JTable(model);
            //ponemos nuestra tabla dentro del scrollPane ya que al momento de traer los usuarios y si son demaciados no se desborde la tabla de la interfaz y a su ves
            //nos permita ver el contenido completo
            jScrollPane1.setViewportView(tablaUsuarios);
            
            model.addColumn(" ");
            model.addColumn("Nombre");
            model.addColumn("Nombre Usuario");
            model.addColumn("Permiso");
            model.addColumn("Estatus");
            
            while (rs.next()) {
                //La tabla solo guarda OBJETOS por esta razon los usuarios que traigamos deben ser alojados cada uno dentro de un array tipo objeto este objeto tendra 5 indices
                Object[] fila = new Object[5];
                for (int i = 0; i < 5; i++) {
                    //traemos cada atributo de la tabla y o ubicamos dentro del array 
                    fila[i]=rs.getObject(i+1);
                }
                //agregamos ese objeto a la tabla
                model.addRow(fila);
            }
            cn.close();
        } catch (SQLException e) {
            System.err.println("Error al llenar tabla "+e);
        }
        //Le agregamos un escuchador de eventos del mouse, la clase mouseAdapter nos permite usar metodos(Polimorfismo) 
        //para usar un evento(click) 
        tablaUsuarios.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent e){
                //guarda el la variable el lugar donde sucede el evento(numero de fila)
                int fila_point = tablaUsuarios.rowAtPoint(e.getPoint());
                int columna_point = 2;
                
                if (fila_point > -1) {
                    //en la variable se guardará un dato el cual será el nombre de usuario se captura este dato mediante las coordenadas
                    //fila(lugar del evento capturado) y siempre será la columna 2, este dato se combierte de objeto a string 
                    user_update = (String)model.getValueAt(fila_point, columna_point);
                    //se abre la interfaz la cual contendra la informacion del usuario antes encontrado
                    new infoUsuario().setVisible(true);
                }
            }
        });
    }
    
    @Override
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelBack = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setEnabled(false);

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaUsuarios);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 610, 180));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Usuarios registrados");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, -1, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Sistema creado por Andre S. © ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 260, -1, -1));
        getContentPane().add(jLabelBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 330));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionarUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelBack;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaUsuarios;
    // End of variables declaration//GEN-END:variables
}
