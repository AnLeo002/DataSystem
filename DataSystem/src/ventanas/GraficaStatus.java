/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.WindowConstants;

import java.sql.*;
import clases.Conexion;

/**
 *
 * @author leosa
 */
public class GraficaStatus extends javax.swing.JFrame {

    int nuevoIngreso, noReparado, enRevision, reparado, entregado;

    public GraficaStatus() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Informaci√≥n del equipo - Cliente " + infoCliente.nombre_cliente);

        ImageIcon fond = new ImageIcon("src/imagenes/wallpaperPrincipal.jpg");
        Icon fondo = new ImageIcon(fond.getImage().getScaledInstance(jLabelBack.getWidth(), jLabelBack.getHeight(), Image.SCALE_DEFAULT));
        jLabelBack.setIcon(fondo);
        

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select estatus,count(estatus) as Cantidad from equipos group by estatus");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                do {
                    if ("Ingresado".equals(rs.getString(1))) {
                        nuevoIngreso = rs.getInt(2);
                    } else if ("En revision".equals(rs.getString(1))) {
                        enRevision = rs.getInt(2);
                    } else if ("Reparado".equals(rs.getString(1))) {
                        reparado = rs.getInt(2);
                    } else if ("No reparado".equals(rs.getString(1))) {
                        noReparado = rs.getInt(2);
                    } else if ("Entrega".equals(rs.getString(1))) {
                        entregado = rs.getInt(2);
                    }
                } while (rs.next());
            }
        } catch (SQLException e) {
            System.err.println("Error de conexion con la base de datos: " + e);
        }
        
        repaint();

    }

    @Override
    public Image getIconImage() {
        Image ret = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/icon.png"));
        return ret;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelBack = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 3, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Grafica de estatus");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, -1, -1));
        getContentPane().add(jLabelBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraficaStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraficaStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraficaStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraficaStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraficaStatus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelBack;
    // End of variables declaration//GEN-END:variables

    public int EstatusMasRepetido(int nuevoIngreso, int noReparado, int enRevision, int reparado, int entregado) {
        if (nuevoIngreso > noReparado && nuevoIngreso > enRevision && nuevoIngreso > reparado && nuevoIngreso > entregado) {
            return nuevoIngreso;
        } else if (noReparado > enRevision && noReparado > reparado && noReparado > entregado) {
            return noReparado;
        } else if (enRevision > reparado && enRevision > entregado) {
            return enRevision;
        } else if (reparado > entregado) {
            return reparado;
        } else {
            return entregado;
        }
    }

    public void paint(Graphics g) {
        super.paint(g);

        int estatus_mas_repetido = EstatusMasRepetido(nuevoIngreso, noReparado, enRevision, reparado, entregado);

        int largoNuevoIngreso = nuevoIngreso * 400 / estatus_mas_repetido;
        int largoNoReparado = noReparado * 400 / estatus_mas_repetido;
        int largoEnRevision = enRevision * 400 / estatus_mas_repetido;
        int largoReparado = reparado * 400 / estatus_mas_repetido;
        int largoEntregado = entregado * 400 / estatus_mas_repetido;

        g.setColor(new Color(240, 240, 0));
        g.fillRect(100, 100, largoNuevoIngreso, 40);
        g.drawString("Nuevo Ingreso", 10, 110);
        g.drawString("Cantidad: " + nuevoIngreso, 10, 133);

        g.setColor(new Color(240, 0, 0));
        g.fillRect(100, 150, largoNoReparado, 40);
        g.drawString("No Reparado", 10, 168);
        g.drawString("Cantidad: " + noReparado, 10, 183);
        
        g.setColor(new Color(0, 250, 0));
        g.fillRect(100, 200, largoReparado, 40);
        g.drawString("Reparado", 10, 218);
        g.drawString("Cantidad: " + reparado, 10, 233);
        
        g.setColor(new Color(240, 240, 240));
        g.fillRect(100, 250, largoEnRevision, 40);
        g.drawString("En revision", 10, 268);
        g.drawString("Cantidad: " + enRevision, 10, 283);

        g.setColor(new Color(200, 200, 250));
        g.fillRect(100, 300, largoEntregado, 40);
        g.drawString("Entregado", 10, 318);
        g.drawString("Cantidad: " + entregado, 10, 333);



    }
}
