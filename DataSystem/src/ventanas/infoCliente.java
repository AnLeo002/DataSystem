/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import java.sql.*;
import clases.Conexion;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;

import java.io.FileOutputStream;
import java.io.IOException;

public class infoCliente extends javax.swing.JFrame {

    public static String num_serie;
    public static String nombre_cliente;
    int id_cliente;

    DefaultTableModel model = new DefaultTableModel();

    public infoCliente() {

        initComponents();

        setLocationRelativeTo(null);
        setResizable(false);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        id_cliente = GestionarClientes.id;

        ImageIcon fond = new ImageIcon("src/imagenes/wallpaperPrincipal.jpg");
        Icon fondo = new ImageIcon(fond.getImage().getScaledInstance(jLabelBack1.getWidth(), jLabelBack1.getHeight(), Image.SCALE_DEFAULT));
        jLabelBack1.setIcon(fondo);
        repaint();

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select * from clientes where id_cliente = '" + id_cliente + "'");

            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                nombre_cliente = rs.getString("nombre_cliente");

                jLabel1.setText("informacion del cliente: " + rs.getString("nombre_cliente"));

                NombreTxt.setText(rs.getString("nombre_cliente"));
                emailTxt.setText(rs.getString("email_cliente"));
                telTxt.setText(rs.getString("tel_cliente"));
                direccion.setText(rs.getString("dir_cliente"));
                modificadoTxt.setText(rs.getString("ultima_modificacion"));
            }
            cn.close();

        } catch (SQLException e) {
            System.err.println("Error de conexion con la base de datos " + e);
        }
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select num_serie,marca,modelo,estatus,fecha_ingreso from equipos where id_cliente = '" + id_cliente + "'");

            tablaEquipos = new JTable(model);

            model.addColumn("Numero de serie");
            model.addColumn("Marca");
            model.addColumn("Modelo");
            model.addColumn("Estado");
            model.addColumn("Fecha de ingreso");

            jScrollPane1.setViewportView(tablaEquipos);

            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                Object[] fila = new Object[5];

                for (int i = 0; i < 5; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            cn.close();
        } catch (SQLException e) {
            System.err.println("Error de conexion para llenar la tabla de equipos " + e);
        }
        tablaEquipos.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = tablaEquipos.rowAtPoint(e.getPoint());
                int colum_point = 0;

                if (fila_point > -1) {
                    num_serie = (String) model.getValueAt(fila_point, colum_point);
                    new infoEquipo().setVisible(true);
                }

            }
        });
    }

    @Override
    public Image getIconImage() {
        Image ret = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/icon.png"));
        return ret;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        NombreTxt = new javax.swing.JTextField();
        emailTxt = new javax.swing.JTextField();
        telTxt = new javax.swing.JTextField();
        direccion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        modificadoTxt = new javax.swing.JTextField();
        impresion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEquipos = new javax.swing.JTable();
        actualizarBtn = new javax.swing.JButton();
        registroEquipo = new javax.swing.JButton();
        jLabelBack1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 3, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Información del cliente");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        NombreTxt.setBackground(new java.awt.Color(0, 102, 153));
        NombreTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        NombreTxt.setForeground(new java.awt.Color(255, 255, 255));
        NombreTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NombreTxt.setBorder(null);
        NombreTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreTxtActionPerformed(evt);
            }
        });
        getContentPane().add(NombreTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 200, 25));

        emailTxt.setBackground(new java.awt.Color(0, 102, 153));
        emailTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        emailTxt.setForeground(new java.awt.Color(255, 255, 255));
        emailTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        emailTxt.setBorder(null);
        getContentPane().add(emailTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 200, 25));

        telTxt.setBackground(new java.awt.Color(0, 102, 153));
        telTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        telTxt.setForeground(new java.awt.Color(255, 255, 255));
        telTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        telTxt.setBorder(null);
        getContentPane().add(telTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 200, 25));

        direccion.setBackground(new java.awt.Color(0, 102, 153));
        direccion.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        direccion.setForeground(new java.awt.Color(255, 255, 255));
        direccion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        direccion.setBorder(null);
        direccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                direccionActionPerformed(evt);
            }
        });
        getContentPane().add(direccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 200, 25));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Telefono:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Email:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Ultima modificación:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Dispositivos registrados");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Direccion:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, -1, -1));

        modificadoTxt.setBackground(new java.awt.Color(0, 102, 153));
        modificadoTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        modificadoTxt.setForeground(new java.awt.Color(255, 255, 255));
        modificadoTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        modificadoTxt.setBorder(null);
        modificadoTxt.setEnabled(false);
        modificadoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificadoTxtActionPerformed(evt);
            }
        });
        getContentPane().add(modificadoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 200, 25));

        impresion.setBackground(new java.awt.Color(204, 204, 204));
        impresion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/impresora.png"))); // NOI18N
        impresion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                impresionActionPerformed(evt);
            }
        });
        getContentPane().add(impresion, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 270, 100, 90));

        tablaEquipos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaEquipos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 430, 170));

        actualizarBtn.setBackground(new java.awt.Color(0, 102, 153));
        actualizarBtn.setFont(new java.awt.Font("Arial", 3, 16)); // NOI18N
        actualizarBtn.setForeground(new java.awt.Color(255, 255, 255));
        actualizarBtn.setText("Actualizar cliente");
        actualizarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarBtnActionPerformed(evt);
            }
        });
        getContentPane().add(actualizarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 330, 200, 30));

        registroEquipo.setBackground(new java.awt.Color(0, 102, 153));
        registroEquipo.setFont(new java.awt.Font("Arial", 3, 16)); // NOI18N
        registroEquipo.setForeground(new java.awt.Color(255, 255, 255));
        registroEquipo.setText("Registrar equipo");
        registroEquipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registroEquipoActionPerformed(evt);
            }
        });
        getContentPane().add(registroEquipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270, 200, 30));
        getContentPane().add(jLabelBack1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 410));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Nombre:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NombreTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreTxtActionPerformed

    private void direccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_direccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_direccionActionPerformed

    private void modificadoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificadoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modificadoTxtActionPerformed

    private void actualizarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarBtnActionPerformed
        String nombre = NombreTxt.getText().trim();
        String email = emailTxt.getText().trim();
        String tel = telTxt.getText().trim();
        String dir = direccion.getText().trim();

        if (nombre.equals("") || email.equals("") || tel.equals("") || dir.equals("")) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        } else {
            try {
                Connection cn1 = Conexion.conectar();
                PreparedStatement pst1 = cn1.prepareStatement("update clientes set nombre_cliente=?,email_cliente=?,tel_cliente=?,dir_cliente=? where id_cliente='" + id_cliente + "'");

                pst1.setString(1, nombre);
                pst1.setString(2, email);
                pst1.setString(3, tel);
                pst1.setString(4, dir);
                pst1.executeUpdate();
                cn1.close();

                JOptionPane.showMessageDialog(null, "Cliente actualizado");

                this.dispose();

            } catch (SQLException e) {
                System.err.println("Existe un error de conexion con la base de datos " + e);
            }
        }
    }//GEN-LAST:event_actualizarBtnActionPerformed

    private void registroEquipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registroEquipoActionPerformed
        new RegistroEquipos().setVisible(true);
    }//GEN-LAST:event_registroEquipoActionPerformed

    private void impresionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_impresionActionPerformed

        String nombre = NombreTxt.getText().trim();
        String email = emailTxt.getText().trim();
        String tel = telTxt.getText().trim();
        String dir = direccion.getText().trim();

        if (nombre.equals("") || email.equals("") || tel.equals("") || dir.equals("")) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        } else {
            Document documento = new Document();

            try {

                String ruta = System.getProperty("user.home");
                PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/OneDrive/Escritorio/" + nombre_cliente + ".pdf"));

                com.itextpdf.text.Image header = com.itextpdf.text.Image.getInstance("src/imagenes/banerMio.png");
                header.scaleToFit(600, 350);
                header.setAlignment(Chunk.ALIGN_CENTER);

                Paragraph parrafo2 = new Paragraph();
                parrafo2.setAlignment(Paragraph.ALIGN_CENTER);
                parrafo2.setFont(FontFactory.getFont("Tohoma", 16, Font.BOLD, BaseColor.DARK_GRAY));
                parrafo2.add("\n\nInformación del cliente:\n\n");

                documento.open();
                documento.add(header);
                documento.add(parrafo2);

                PdfPTable tablaCliente = new PdfPTable(5);
                tablaCliente.addCell("ID");
                tablaCliente.addCell("Nombre");
                tablaCliente.addCell("Email");
                tablaCliente.addCell("Télefono");
                tablaCliente.addCell("Dirección");

                try {
                    Connection cn = Conexion.conectar();
                    PreparedStatement pst = cn.prepareStatement("select * from clientes where id_cliente='" + id_cliente + "'");
                    ResultSet rs = pst.executeQuery();

                    if (rs.next()) {
                        tablaCliente.addCell(rs.getString(1));
                        tablaCliente.addCell(rs.getString(2));
                        tablaCliente.addCell(rs.getString(3));
                        tablaCliente.addCell(rs.getString(4));
                        tablaCliente.addCell(rs.getString(5));

                    }
                    documento.add(tablaCliente);
                } catch (DocumentException | SQLException e) {
                    System.err.println("Error de conexion con la tabla de clientes: " + e);
                }
                Paragraph parrafo3 = new Paragraph();
                parrafo3.setAlignment(Paragraph.ALIGN_CENTER);
                parrafo3.setFont(FontFactory.getFont("Tohoma", 16, Font.BOLD, BaseColor.DARK_GRAY));
                parrafo3.add("\n\n\n Equipos registrados:\n\n");

                documento.add(parrafo3);

                PdfPTable tablaEquipo = new PdfPTable(5);
                tablaEquipo.addCell("N de serie");
                tablaEquipo.addCell("Tipo");
                tablaEquipo.addCell("Marca");
                tablaEquipo.addCell("Modelo");
                tablaEquipo.addCell("Estatus");

                try {
                    Connection cn2 = Conexion.conectar();
                    PreparedStatement pst2 = cn2.prepareStatement("select num_serie,tipo_equipo,marca,modelo,estatus from equipos where id_cliente='" + id_cliente + "'");
                    ResultSet rs2 = pst2.executeQuery();

                    while (rs2.next()) {
                        tablaEquipo.addCell(rs2.getString(1));
                        tablaEquipo.addCell(rs2.getString(2));
                        tablaEquipo.addCell(rs2.getString(3));
                        tablaEquipo.addCell(rs2.getString(4));
                        tablaEquipo.addCell(rs2.getString(5));

                    }
                    documento.add(tablaEquipo);

                } catch (DocumentException | SQLException e) {
                    System.err.println("Error de conexion con la tabla de clientes: " + e);
                }
                documento.close();
                JOptionPane.showMessageDialog(null, "Reporte creado");

            } catch (DocumentException | HeadlessException | FileNotFoundException e) {
                System.err.println("Error en el documento " + e);
            } catch (IOException e) {
                System.err.println("Error en la imagen " + e);
            }
        }

    }//GEN-LAST:event_impresionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(infoCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(infoCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(infoCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(infoCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new infoCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NombreTxt;
    private javax.swing.JButton actualizarBtn;
    private javax.swing.JTextField direccion;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JButton impresion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelBack1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField modificadoTxt;
    private javax.swing.JButton registroEquipo;
    private javax.swing.JTable tablaEquipos;
    private javax.swing.JTextField telTxt;
    // End of variables declaration//GEN-END:variables
}
